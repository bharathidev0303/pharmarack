// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'display_order_detail.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

DisplayOrderDetail _$DisplayOrderDetailFromJson(Map<String, dynamic> json) =>
    DisplayOrderDetail(
      success: json['success'] as bool?,
      data: json['data'] == null
          ? null
          : Data.fromJson(json['data'] as Map<String, dynamic>),
      message: json['message'] as String?,
    );

Map<String, dynamic> _$DisplayOrderDetailToJson(DisplayOrderDetail instance) =>
    <String, dynamic>{
      'success': instance.success,
      'data': instance.data,
      'message': instance.message,
    };

Data _$DataFromJson(Map<String, dynamic> json) => Data(
      invoiceTotal: json['invoiceTotal'] as String?,
      invoiceTax: json['invoiceTax'] as String?,
      invoiceDiscount: json['invoiceDiscount'] as String?,
      bouncedTaxTotal: json['bouncedTaxTotal'] as String?,
      bouncedTotal: json['bouncedTotal'] as String?,
      bouncedDiscountTotal: json['bouncedDiscountTotal'] as String?,
      invoicedItems: (json['invoicedItems'] as List<dynamic>?)
          ?.map((e) => InvoicedItems.fromJson(e as Map<String, dynamic>))
          .toList(),
      bouncedItems: (json['bouncedItems'] as List<dynamic>?)
          ?.map((e) => BouncedItems.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$DataToJson(Data instance) => <String, dynamic>{
      'invoiceTotal': instance.invoiceTotal,
      'invoiceTax': instance.invoiceTax,
      'invoiceDiscount': instance.invoiceDiscount,
      'bouncedTaxTotal': instance.bouncedTaxTotal,
      'bouncedTotal': instance.bouncedTotal,
      'bouncedDiscountTotal': instance.bouncedDiscountTotal,
      'invoicedItems': instance.invoicedItems,
      'bouncedItems': instance.bouncedItems,
    };

InvoicedItems _$InvoicedItemsFromJson(Map<String, dynamic> json) =>
    InvoicedItems(
      orderDetailId: json['OrderDetailId'] as int?,
      orderId: json['OrderId'] as int?,
      orderNo: json['OrderNo'] as String?,
      partyCode: json['PartyCode'] as String?,
      orderDate: json['OrderDate'] as String?,
      storeId: json['StoreId'] as int?,
      storeName: json['StoreName'] as String?,
      mobileNumber: json['MobileNumber'] as String?,
      orderAmount: json['OrderAmount'],
      createdBy: json['CreatedBy'] as int?,
      createdDate: json['CreatedDate'] as String?,
      isUploaded: json['IsUploaded'] as int?,
      uploadDate: json['UploadDate'] as String?,
      isProcessed: json['IsProcessed'] as int?,
      processedDate: json['ProcessedDate'] as String?,
      deliveryMode: json['DeliveryMode'] as String?,
      remarks: json['Remarks'] as String?,
      orderSource: json['OrderSource'] as String?,
      createdByName: json['CreatedByName'] as String?,
      productCode: json['ProductCode'] as String?,
      displayProductCode: json['DisplayProductCode'] as String?,
      productFullName: json['ProductFullName'] as String?,
      productName: json['ProductName'] as String?,
      companyCode: json['CompanyCode'] as String?,
      company: json['Company'] as String?,
      quantity: json['Quantity'] as int?,
      mrp: json['MRP'] as String?,
      ptr: json['PTR'] as String?,
      storeProductPTR: json['StoreProductPTR'] as String?,
      netRate: json['NetRate'] as String?,
      productWiseAmount: json['ProductWiseAmount'] as String?,
      free: json['Free'] as int?,
      hiddenPTR: json['HiddenPTR'] as String?,
      gst: json['GST'] as String?,
      margin: json['Margin'] as String?,
      schemeold: json['Schemeold'] as String?,
      scheme: json['Scheme'],
      dateFormat: json['DateFormat'] as String?,
      schemeFrom: json['SchemeFrom'],
      schemeTo: json['SchemeTo'],
      schemeType: json['SchemeType'],
      packing: json['Packing'] as String?,
      boxPacking: json['BoxPacking'] as String?,
      casePacking: json['CasePacking'] as String?,
      actualQuantityReceived: json['ActualQuantityReceived'] as int?,
      actualFreeReceived: json['ActualFreeReceived'],
      minItemLimit: json['MinItemLimit'] as int?,
      maxItemLimit: json['MaxItemLimit'] as int?,
      minAmountLimit: json['MinAmountLimit'] as String?,
      maxAmountLimit: json['MaxAmountLimit'] as String?,
      allowMinQty: json['AllowMinQty'] as int?,
      allowMaxQty: json['AllowMaxQty'] as int?,
      stepUpValue: json['StepUpValue'] as int?,
      allowMOQ: json['AllowMOQ'] as String?,
      isDODProduct: json['IsDODProduct'] as int?,
      retailerSchemePreference: json['RetailerSchemePreference'] as int?,
      retailerSchemePriority: json['RetailerSchemePriority'] as int?,
      salesmanSchemePreference: json['SalesmanSchemePreference'] as int?,
      salesmanSchemePriority: json['SalesmanSchemePriority'] as int?,
      displayHalfScheme: json['DisplayHalfScheme'] as String?,
      displayHalfSchemeOn: json['DisplayHalfSchemeOn'] as String?,
      roundOffDisplayHalfScheme: json['RoundOffDisplayHalfScheme'] as String?,
      rStockVisibility: json['RStockVisibility'] as int?,
      halfSchemeValueToRetailer: json['HalfSchemeValueToRetailer'] as int?,
      halfSchemeValueToSalesman: json['HalfSchemeValueToSalesman'] as int?,
      isShowNonMappedOrderStock: json['IsShowNonMappedOrderStock'] as int?,
      isGroupWisePTRRetailer: json['IsGroupWisePTRRetailer'] as int?,
      isGroupWisePTR: json['IsGroupWisePTR'] as int?,
      orderDeliveryModeStatus: json['OrderDeliveryModeStatus'] as int?,
      stock: json['Stock'] as String?,
      loose: json['Loose'] as String?,
      productLock: json['ProductLock'] as int?,
      dProductLock: json['DProductLock'] as String?,
      rShowPtr: json['RShowPtr'] as int?,
      rShowPtrForAllCompanies: json['RShowPtrForAllCompanies'] as int?,
      isPartyLocked: json['IsPartyLocked'] as String?,
      doNotShowToRetailer: json['DoNotShowToRetailer'] as int?,
      enabledNonMappedOrder: json['EnabledNonMappedOrder'] as int?,
      expiryDate: json['ExpiryDate'],
    );

Map<String, dynamic> _$InvoicedItemsToJson(InvoicedItems instance) =>
    <String, dynamic>{
      'OrderDetailId': instance.orderDetailId,
      'OrderId': instance.orderId,
      'OrderNo': instance.orderNo,
      'PartyCode': instance.partyCode,
      'OrderDate': instance.orderDate,
      'StoreId': instance.storeId,
      'StoreName': instance.storeName,
      'MobileNumber': instance.mobileNumber,
      'OrderAmount': instance.orderAmount,
      'CreatedBy': instance.createdBy,
      'CreatedDate': instance.createdDate,
      'IsUploaded': instance.isUploaded,
      'UploadDate': instance.uploadDate,
      'IsProcessed': instance.isProcessed,
      'ProcessedDate': instance.processedDate,
      'DeliveryMode': instance.deliveryMode,
      'Remarks': instance.remarks,
      'OrderSource': instance.orderSource,
      'CreatedByName': instance.createdByName,
      'ProductCode': instance.productCode,
      'DisplayProductCode': instance.displayProductCode,
      'ProductFullName': instance.productFullName,
      'ProductName': instance.productName,
      'CompanyCode': instance.companyCode,
      'Company': instance.company,
      'Quantity': instance.quantity,
      'MRP': instance.mrp,
      'PTR': instance.ptr,
      'StoreProductPTR': instance.storeProductPTR,
      'NetRate': instance.netRate,
      'ProductWiseAmount': instance.productWiseAmount,
      'Free': instance.free,
      'HiddenPTR': instance.hiddenPTR,
      'GST': instance.gst,
      'Margin': instance.margin,
      'Schemeold': instance.schemeold,
      'Scheme': instance.scheme,
      'DateFormat': instance.dateFormat,
      'SchemeFrom': instance.schemeFrom,
      'SchemeTo': instance.schemeTo,
      'SchemeType': instance.schemeType,
      'Packing': instance.packing,
      'BoxPacking': instance.boxPacking,
      'CasePacking': instance.casePacking,
      'ActualQuantityReceived': instance.actualQuantityReceived,
      'ActualFreeReceived': instance.actualFreeReceived,
      'MinItemLimit': instance.minItemLimit,
      'MaxItemLimit': instance.maxItemLimit,
      'MinAmountLimit': instance.minAmountLimit,
      'MaxAmountLimit': instance.maxAmountLimit,
      'AllowMinQty': instance.allowMinQty,
      'AllowMaxQty': instance.allowMaxQty,
      'StepUpValue': instance.stepUpValue,
      'AllowMOQ': instance.allowMOQ,
      'IsDODProduct': instance.isDODProduct,
      'RetailerSchemePreference': instance.retailerSchemePreference,
      'RetailerSchemePriority': instance.retailerSchemePriority,
      'SalesmanSchemePreference': instance.salesmanSchemePreference,
      'SalesmanSchemePriority': instance.salesmanSchemePriority,
      'DisplayHalfScheme': instance.displayHalfScheme,
      'DisplayHalfSchemeOn': instance.displayHalfSchemeOn,
      'RoundOffDisplayHalfScheme': instance.roundOffDisplayHalfScheme,
      'RStockVisibility': instance.rStockVisibility,
      'HalfSchemeValueToRetailer': instance.halfSchemeValueToRetailer,
      'HalfSchemeValueToSalesman': instance.halfSchemeValueToSalesman,
      'IsShowNonMappedOrderStock': instance.isShowNonMappedOrderStock,
      'IsGroupWisePTRRetailer': instance.isGroupWisePTRRetailer,
      'IsGroupWisePTR': instance.isGroupWisePTR,
      'OrderDeliveryModeStatus': instance.orderDeliveryModeStatus,
      'Stock': instance.stock,
      'Loose': instance.loose,
      'ProductLock': instance.productLock,
      'DProductLock': instance.dProductLock,
      'RShowPtr': instance.rShowPtr,
      'RShowPtrForAllCompanies': instance.rShowPtrForAllCompanies,
      'IsPartyLocked': instance.isPartyLocked,
      'DoNotShowToRetailer': instance.doNotShowToRetailer,
      'EnabledNonMappedOrder': instance.enabledNonMappedOrder,
      'ExpiryDate': instance.expiryDate,
    };

BouncedItems _$BouncedItemsFromJson(Map<String, dynamic> json) => BouncedItems(
      orderNo: json['OrderNo'] as String?,
      storeid: json['storeid'] as int?,
      orderId: json['OrderId'] as int?,
      masterProductId: json['MasterProductId'] as int?,
      masterProductName: json['MasterProductName'] as String?,
      productCode: json['ProductCode'] as String?,
      displayProductCode: json['DisplayProductCode'] as String?,
      storeProductName: json['StoreProductName'] as String?,
      partyName: json['PartyName'] as String?,
      orderedQuantity: json['OrderedQuantity'] as int?,
      ptr: json['PTR'] as String?,
      free: json['Free'] as int?,
      scheme: json['Scheme'],
      receivedQuantity: json['ReceivedQuantity'] as int?,
      bouncedQuantity: json['BouncedQuantity'] as int?,
      orderDate: json['OrderDate'] as String?,
      storeName: json['StoreName'] as String?,
      processedDate: json['ProcessedDate'] as String?,
      uploadDate: json['UploadDate'],
      createdBy: json['CreatedBy'] as int?,
      createdByName: json['CreatedByName'] as String?,
      packing: json['Packing'] as String?,
      mrp: json['MRP'] as String?,
      mobileNumber: json['MobileNumber'] as String?,
      deliveryOption: json['DeliveryOption'] as String?,
      remarks: json['Remarks'] as String?,
      expirydate: json['expirydate'],
      deliveryPriority: json['DeliveryPriority'] as String?,
      storeCnt: json['Store_Cnt'] as int?,
      orderAmount: json['OrderAmount'] as int?,
      productWiseAmount: json['ProductWiseAmount'] as String?,
      companyName: json['Company'] as String?,
    );

Map<String, dynamic> _$BouncedItemsToJson(BouncedItems instance) =>
    <String, dynamic>{
      'OrderNo': instance.orderNo,
      'storeid': instance.storeid,
      'OrderId': instance.orderId,
      'MasterProductId': instance.masterProductId,
      'MasterProductName': instance.masterProductName,
      'ProductCode': instance.productCode,
      'DisplayProductCode': instance.displayProductCode,
      'StoreProductName': instance.storeProductName,
      'PartyName': instance.partyName,
      'OrderedQuantity': instance.orderedQuantity,
      'PTR': instance.ptr,
      'Free': instance.free,
      'Scheme': instance.scheme,
      'ReceivedQuantity': instance.receivedQuantity,
      'BouncedQuantity': instance.bouncedQuantity,
      'OrderDate': instance.orderDate,
      'StoreName': instance.storeName,
      'ProcessedDate': instance.processedDate,
      'UploadDate': instance.uploadDate,
      'CreatedBy': instance.createdBy,
      'CreatedByName': instance.createdByName,
      'Packing': instance.packing,
      'MRP': instance.mrp,
      'MobileNumber': instance.mobileNumber,
      'DeliveryOption': instance.deliveryOption,
      'Remarks': instance.remarks,
      'expirydate': instance.expirydate,
      'DeliveryPriority': instance.deliveryPriority,
      'Store_Cnt': instance.storeCnt,
      'OrderAmount': instance.orderAmount,
      'ProductWiseAmount': instance.productWiseAmount,
      'Company': instance.companyName,
    };
