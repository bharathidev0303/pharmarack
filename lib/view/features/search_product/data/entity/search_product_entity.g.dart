// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'search_product_entity.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

SearchProductEntity _$SearchProductEntityFromJson(Map<String, dynamic> json) =>
    SearchProductEntity(
      success: json['success'] as bool,
      statusCode: json['StatusCode'] as int,
      data: (json['data'] as List<dynamic>)
          .map((e) =>
              SearchProductListEntity.fromJson(e as Map<String, dynamic>))
          .toList(),
      message: json['message'] as String,
    );

Map<String, dynamic> _$SearchProductEntityToJson(
        SearchProductEntity instance) =>
    <String, dynamic>{
      'success': instance.success,
      'StatusCode': instance.statusCode,
      'data': instance.data,
      'message': instance.message,
    };

SearchProductListEntity _$SearchProductListEntityFromJson(
        Map<String, dynamic> json) =>
    SearchProductListEntity(
      storeId: json['StoreId'] as int? ?? 0,
      storeName: json['StoreName'] as String? ?? '',
      productName: json['ProductName'] as String? ?? '',
      productCode: json['ProductCode'] as String? ?? '',
      displayProductCode: json['DisplayProductCode'] as String? ?? '',
      packing: json['Packing'] as String? ?? '',
      mrp: (json['MRP'] as num?)?.toDouble() ?? 0,
      ptr: (json['PTR'] as num?)?.toDouble() ?? 0,
      company: json['Company'] as String? ?? '',
      companyCode: json['CompanyCode'] as String? ?? '',
      scheme: json['Scheme'] as String? ?? '',
      stock: json['Stock'] as int? ?? 0,
      productFullName: json['ProductFullName'] as String? ?? '',
      productLock: json['ProductLock'] as bool,
      hiddenPtr: (json['HiddenPTR'] as num?)?.toDouble() ?? 0,
      showPtr: json['ShowPTR'] as bool,
      rShowPtr: json['RShowPtr'] as int? ?? 0,
      rShowPtrForAllCompanies: json['RShowPtrForAllCompanies'] as int? ?? 0,
      allowMinQty: json['AllowMinQty'] as int? ?? 0,
      allowMaxQty: json['AllowMaxQty'] as int? ?? 0,
      stepUpValue: json['StepUpValue'] as int? ?? 0,
      allowMoq: json['AllowMOQ'] as bool,
      retailerSchemePreference: json['RetailerSchemePreference'] as int? ?? 0,
      retailerSchemePriority: json['RetailerSchemePriority'] as int? ?? 0,
      regExProductName: json['RegExProductName'] as String? ?? '',
      displayHalfScheme: json['DisplayHalfScheme'] as bool,
      displayHalfSchemeOn: json['DisplayHalfSchemeOn'] as String? ?? '',
      roundOffDisplayHalfScheme: json['RoundOffDisplayHalfScheme'] as int? ?? 0,
      rStockVisibility: json['RStockVisibility'] as int? ?? 0,
      isMapped: json['IsMapped'] as int? ?? 0,
      nonMapPartyCode: json['NonMapPartyCode'] as String? ?? '',
      isShowNonMappedOrderStock: json['IsShowNonMappedOrderStock'] as int? ?? 0,
      orderRemarks: json['OrderRemarks'] as bool,
      orderDeliveryModeStatus: json['OrderDeliveryModeStatus'] as bool,
      isPartyLocked: json['IsPartyLocked'] as String? ?? '',
      isPartyLockedSoonByDist: json['IsPartyLockedSoonByDist'] as String? ?? '',
      halfSchemeValueToRetailer: json['HalfSchemeValueToRetailer'] as int? ?? 0,
      rewardSchemeId: json['RewardSchemeId'] as String? ?? '',
      netRate: json['NetRate'] as String? ?? '',
      prProductName: json['PrProductName'] as String? ?? '',
      prProductId: json['PrProductId'] as int? ?? 0,
      availDistributorCount: json['AvailDistributorCount'] as int? ?? 0,
      prRegexProductName: json['PrRegexProductName'] as String? ?? '',
      discountPercentScheme: json['DiscountPercentScheme,'],
      margin: json['Margin'] as String? ?? '',
      cashbackMessage: json['CashbackMessage'],
      cashbackMinQuantity: json['CashbackMinQuantity'] as String? ?? '',
      cashbackMaxQuantity: json['CashbackMaxQuantity'],
      cashbackTermsAndConditions: json['CashbackTermsAndConditions'],
      storeProductGst: (json['StoreProductGST'] as num?)?.toDouble() ?? 0,
      availableStoreCount: json['AvailableStoreCount'] as String? ?? '',
      rateValidity: json['RateValidity'] as String? ?? '',
      companyId: json['CompanyId'],
      companyName: json['CompanyName'],
      expiryDate: json['ExpiryDate'],
      cashbackFromDate: json['CashbackFromDate'],
      cashbackEndDate: json['CashbackEndDate'],
      mobileNumber: json['MobileNumber'] as String? ?? '',
      maxCashback: json['MaxCashback'],
      brandName: json['BrandName'] as String? ?? '',
      motherBrandCode: json['motherBrandCode'] as String? ?? '',
      motherBrandName: json['MotherBrandName'] as String? ?? '',
      manufactureName: json['ManufactureName'] as String? ?? '',
      drugCategoryName: json['DrugCategoryName'] as String? ?? '',
      superGroupName: json['SuperGroupName'] as String? ?? '',
      subGroupName: json['SubGroupName'] as String? ?? '',
      subGroupShortCode: json['SubGroupShortCode'] as String? ?? '',
      drugtypeName: json['DrugtypeName'] as String? ?? '',
      className: json['ClassName'] as String? ?? '',
      brandCode: json['BrandCode'] as String? ?? '',
      uniformProductCode: json['UniformProductCode'] as String? ?? '',
      therapyName: json['TherapyName'] as String? ?? '',
      regionName: json['RegionName'] as String? ?? '',
    );

Map<String, dynamic> _$SearchProductListEntityToJson(
        SearchProductListEntity instance) =>
    <String, dynamic>{
      'StoreId': instance.storeId,
      'StoreName': instance.storeName,
      'ProductName': instance.productName,
      'ProductCode': instance.productCode,
      'DisplayProductCode': instance.displayProductCode,
      'Packing': instance.packing,
      'MRP': instance.mrp,
      'PTR': instance.ptr,
      'Company': instance.company,
      'CompanyCode': instance.companyCode,
      'Scheme': instance.scheme,
      'Stock': instance.stock,
      'ProductFullName': instance.productFullName,
      'ProductLock': instance.productLock,
      'HiddenPTR': instance.hiddenPtr,
      'ShowPTR': instance.showPtr,
      'RShowPtr': instance.rShowPtr,
      'RShowPtrForAllCompanies': instance.rShowPtrForAllCompanies,
      'AllowMinQty': instance.allowMinQty,
      'AllowMaxQty': instance.allowMaxQty,
      'StepUpValue': instance.stepUpValue,
      'AllowMOQ': instance.allowMoq,
      'RetailerSchemePreference': instance.retailerSchemePreference,
      'RetailerSchemePriority': instance.retailerSchemePriority,
      'RegExProductName': instance.regExProductName,
      'DisplayHalfScheme': instance.displayHalfScheme,
      'DisplayHalfSchemeOn': instance.displayHalfSchemeOn,
      'RoundOffDisplayHalfScheme': instance.roundOffDisplayHalfScheme,
      'RStockVisibility': instance.rStockVisibility,
      'IsMapped': instance.isMapped,
      'NonMapPartyCode': instance.nonMapPartyCode,
      'IsShowNonMappedOrderStock': instance.isShowNonMappedOrderStock,
      'OrderRemarks': instance.orderRemarks,
      'OrderDeliveryModeStatus': instance.orderDeliveryModeStatus,
      'IsPartyLocked': instance.isPartyLocked,
      'IsPartyLockedSoonByDist': instance.isPartyLockedSoonByDist,
      'HalfSchemeValueToRetailer': instance.halfSchemeValueToRetailer,
      'RewardSchemeId': instance.rewardSchemeId,
      'NetRate': instance.netRate,
      'PrProductName': instance.prProductName,
      'PrProductId': instance.prProductId,
      'AvailDistributorCount': instance.availDistributorCount,
      'PrRegexProductName': instance.prRegexProductName,
      'DiscountPercentScheme,': instance.discountPercentScheme,
      'Margin': instance.margin,
      'CashbackMessage': instance.cashbackMessage,
      'CashbackMinQuantity': instance.cashbackMinQuantity,
      'CashbackMaxQuantity': instance.cashbackMaxQuantity,
      'CashbackTermsAndConditions': instance.cashbackTermsAndConditions,
      'StoreProductGST': instance.storeProductGst,
      'AvailableStoreCount': instance.availableStoreCount,
      'RateValidity': instance.rateValidity,
      'CompanyId': instance.companyId,
      'CompanyName': instance.companyName,
      'ExpiryDate': instance.expiryDate,
      'CashbackFromDate': instance.cashbackFromDate,
      'CashbackEndDate': instance.cashbackEndDate,
      'MobileNumber': instance.mobileNumber,
      'MaxCashback': instance.maxCashback,
      'BrandName': instance.brandName,
      'motherBrandCode': instance.motherBrandCode,
      'MotherBrandName': instance.motherBrandName,
      'ManufactureName': instance.manufactureName,
      'DrugCategoryName': instance.drugCategoryName,
      'SuperGroupName': instance.superGroupName,
      'SubGroupName': instance.subGroupName,
      'SubGroupShortCode': instance.subGroupShortCode,
      'DrugtypeName': instance.drugtypeName,
      'ClassName': instance.className,
      'BrandCode': instance.brandCode,
      'UniformProductCode': instance.uniformProductCode,
      'TherapyName': instance.therapyName,
      'RegionName': instance.regionName,
    };
